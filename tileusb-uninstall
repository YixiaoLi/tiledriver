#!/bin/bash
#
# Copyright 2014 Tilera Corporation. All Rights Reserved.
#
# Uninstall the tileusb driver.
#
# This script will uninstall the driver for the currently running kernel.
#

module=tileusb

kernel=`uname -r`
install_dir=/lib/modules/${kernel}/kernel/drivers/tile
install_file=${install_dir}/tileusb.ko

# Check to see if we're running as root.
if [ "$(id -u)" != "0" ]; then
   echo "This script must be run as root." 1>&2
   exit 1
fi

# Unload driver, if present.
if grep -q "^${module} " /proc/modules; then
    if [ -f "$install_file" ]; then
	old_version=`/sbin/modinfo -F version ${module}`
	number=`echo ${old_version} | tr . '\t' | cut -f 1`
	if [ $number -gt 1000 ]; then
	    echo "Cannot unload old driver."
	else
	    echo "Unloading driver version $old_version:"
	    /sbin/rmmod ${module}
	fi
    else
	echo "Cannot unload missing driver."
    fi
fi

# Uninstall udev script, if needed.
udev_script=/etc/udev/rules.d/tileusb.rules
if [ -f "$udev_script" ]; then
    echo "Removing udev script."
    rm -f ${udev_script}
fi

# Uninstall init script, if needed.
init_script=/etc/init.d/tileusb
if [ -f "$init_script" ]; then
    echo "Removing driver installation files: "
    /sbin/chkconfig --del tileusb
    rm -f ${init_script}
fi

# Delete the driver kernel module.
rm -f ${install_file}
/sbin/depmod

# Note if an old driver is still running so the user knows to reboot.
if grep -q "^${module} " /proc/modules; then
    echo "Old driver still loaded; removal requires reboot."
fi
